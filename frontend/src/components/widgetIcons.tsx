import React from "react";
import type { Widgets } from "@openai/chatkit";
import {
  Atom,
  BadgeCheck,
  BarChartBig,
  Book,
  BookOpen,
  BookOpenCheck,
  Bot,
  Box,
  Briefcase,
  Bug,
  Calendar,
  Check,
  CheckCircle,
  ChevronLeft,
  ChevronRight,
  Circle,
  CircleHelp,
  Compass,
  Dot,
  ExternalLink,
  File,
  FileText,
  FlaskConical,
  Globe,
  IdCard,
  Image,
  Images,
  Info,
  KeyRound,
  Layers,
  LifeBuoy,
  Lightbulb,
  Mail,
  Map,
  MapPin,
  Medal,
  MessageSquareText,
  Monitor,
  MoreHorizontal,
  MoreVertical,
  Notebook,
  NotebookPen,
  PartyPopper,
  PenLine,
  PenSquare,
  Pencil,
  Phone,
  PieChart,
  Play,
  Plus,
  RefreshCcw,
  Search,
  Smartphone,
  Sparkle,
  Sparkles,
  SquareCode,
  Star,
  User,
  UserRound,
  Zap,
  SlidersHorizontal,
} from "lucide-react";
import type { LucideProps } from "lucide-react";

const CheckCircleFilled = (props: LucideProps) => (
  <CheckCircle {...props} fill="currentColor" stroke="none" />
);

const StarFilled = (props: LucideProps) => (
  <Star {...props} fill="currentColor" stroke="none" />
);

const iconMap: Partial<Record<Widgets.WidgetIcon, React.ComponentType<LucideProps>>> = {
  agent: Bot,
  analytics: BarChartBig,
  atom: Atom,
  batch: Layers,
  bolt: Zap,
  "book-open": BookOpen,
  "book-closed": Book,
  "book-clock": BookOpenCheck,
  bug: Bug,
  calendar: Calendar,
  chart: PieChart,
  check: Check,
  "check-circle": CheckCircle,
  "check-circle-filled": CheckCircleFilled,
  "chevron-left": ChevronLeft,
  "chevron-right": ChevronRight,
  "circle-question": CircleHelp,
  compass: Compass,
  confetti: PartyPopper,
  cube: Box,
  desktop: Monitor,
  document: FileText,
  dot: Dot,
  "dots-horizontal": MoreHorizontal,
  "dots-vertical": MoreVertical,
  "empty-circle": Circle,
  "external-link": ExternalLink,
  globe: Globe,
  keys: KeyRound,
  lab: FlaskConical,
  images: Images,
  info: Info,
  lifesaver: LifeBuoy,
  lightbulb: Lightbulb,
  mail: Mail,
  "map-pin": MapPin,
  maps: Map,
  mobile: Smartphone,
  name: BadgeCheck,
  notebook: Notebook,
  "notebook-pencil": NotebookPen,
  "page-blank": File,
  phone: Phone,
  play: Play,
  plus: Plus,
  profile: UserRound,
  "profile-card": IdCard,
  reload: RefreshCcw,
  star: Star,
  "star-filled": StarFilled,
  search: Search,
  sparkle: Sparkle,
  "sparkle-double": Sparkles,
  "square-code": SquareCode,
  "square-image": Image,
  "square-text": MessageSquareText,
  suitcase: Briefcase,
  "settings-slider": SlidersHorizontal,
  user: User,
  wreath: Medal,
  write: PenLine,
  "write-alt": Pencil,
  "write-alt2": PenSquare,
};

export const renderWidgetIcon = (
  name?: Widgets.WidgetIcon,
  props?: LucideProps,
): React.ReactElement | null => {
  if (!name) {
    return null;
  }
  const IconComponent = iconMap[name];
  if (!IconComponent) {
    return null;
  }
  return <IconComponent size="1em" aria-hidden focusable={false} strokeWidth={1.8} {...props} />;
};

