# Exemple de configuration pour le backend et le frontend ChatKit
# Dupliquez ce fichier en `.env` (à la racine) et adaptez les valeurs.

# --- Backend FastAPI ---
# Clé API OpenAI disposant de l'accès ChatKit (obligatoire)
OPENAI_API_KEY="sk-your-openai-api-key"

# Identifiant du workflow ChatKit à utiliser (obligatoire)
CHATKIT_WORKFLOW_ID="workflow-your-workflow-id"

# URL de base de l'API OpenAI (optionnel)
# CHATKIT_API_BASE="https://api.openai.com"

# Origines autorisées pour les requêtes navigateur (optionnel, séparées par des virgules)
# ALLOWED_ORIGINS="http://localhost:5173,https://chatkit.example.com"

# --- Frontend Vite ---
# Domaine et URL personnalisés pour un serveur ChatKit auto-hébergé (optionnels)
# Activez ces variables si vous exposez votre propre implémentation compatible
# avec le protocole ChatKit (par exemple en utilisant `openai-chatkit`).
# Le frontend basculera alors sur cette URL au lieu de récupérer un client
# secret via l'API hébergée.
# VITE_CHATKIT_API_URL="https://chatkit.example.com/chatkit"
# VITE_CHATKIT_DOMAIN_KEY="dk_live_your-domain-key"
# VITE_CHATKIT_UPLOAD_STRATEGY="two_phase"   # ou "direct"
# VITE_CHATKIT_DIRECT_UPLOAD_URL="https://chatkit.example.com/upload" # requis si stratégie "direct"

# Port d'exposition du serveur Vite (optionnel)
# VITE_PORT=5183

# Hôte utilisé pour les connexions HMR (optionnel, utile derrière un tunnel/proxy)
# VITE_HMR_HOST="localhost"
# Exemple derrière Nginx : VITE_HMR_HOST="chatkit.example.com"

# Liste d'hôtes supplémentaires autorisés par Vite (séparés par des virgules)
# VITE_ALLOWED_HOSTS="chatkit.example.com"

# Protocole et port HMR à ajuster selon votre configuration réseau (optionnels)
# VITE_HMR_PROTOCOL="ws"
# VITE_HMR_CLIENT_PORT=5183
# Exemple derrière Nginx : VITE_HMR_PROTOCOL="wss" et VITE_HMR_CLIENT_PORT=443

# URL du backend à laquelle proxyfier les appels API depuis le frontend (optionnel)
# VITE_BACKEND_URL="http://127.0.0.1:8000"
# Exemple derrière Nginx : VITE_BACKEND_URL="https://chatkit.example.com/api"
